package org.apache.catalina;
import java.io.File;
import org.apache.catalina.connector.Response;
import org.apache.catalina.connector.Request;
import java.beans.PropertyChangeListener;
import javax.management.ObjectName;
import org.apache.juli.logging.Log;
public interface Container extends Lifecycle {
    public static final String ADD_CHILD_EVENT = "addChild";
    public static final String ADD_VALVE_EVENT = "addValve";
    public static final String REMOVE_CHILD_EVENT = "removeChild";
    public static final String REMOVE_VALVE_EVENT = "removeValve";
    Log getLogger();
    String getLogName();
    ObjectName getObjectName();
    String getDomain();
    String getMBeanKeyProperties();
    Pipeline getPipeline();
    Cluster getCluster();
    void setCluster ( Cluster p0 );
    int getBackgroundProcessorDelay();
    void setBackgroundProcessorDelay ( int p0 );
    String getName();
    void setName ( String p0 );
    Container getParent();
    void setParent ( Container p0 );
    ClassLoader getParentClassLoader();
    void setParentClassLoader ( ClassLoader p0 );
    Realm getRealm();
    void setRealm ( Realm p0 );
    void backgroundProcess();
    void addChild ( Container p0 );
    void addContainerListener ( ContainerListener p0 );
    void addPropertyChangeListener ( PropertyChangeListener p0 );
    Container findChild ( String p0 );
    Container[] findChildren();
    ContainerListener[] findContainerListeners();
    void removeChild ( Container p0 );
    void removeContainerListener ( ContainerListener p0 );
    void removePropertyChangeListener ( PropertyChangeListener p0 );
    void fireContainerEvent ( String p0, Object p1 );
    void logAccess ( Request p0, Response p1, long p2, boolean p3 );
    AccessLog getAccessLog();
    int getStartStopThreads();
    void setStartStopThreads ( int p0 );
    File getCatalinaBase();
    File getCatalinaHome();
}
