package org.apache.tomcat.dbcp.dbcp2.cpdsadapter;
import java.util.Arrays;
import org.apache.tomcat.dbcp.dbcp2.PStmtKey;
public class PStmtKeyCPDS extends PStmtKey {
    private final Integer _resultSetHoldability;
    private final int[] _columnIndexes;
    private final String[] _columnNames;
    public PStmtKeyCPDS ( final String sql ) {
        super ( sql );
        this._resultSetHoldability = null;
        this._columnIndexes = null;
        this._columnNames = null;
    }
    public PStmtKeyCPDS ( final String sql, final int autoGeneratedKeys ) {
        super ( sql, null, autoGeneratedKeys );
        this._resultSetHoldability = null;
        this._columnIndexes = null;
        this._columnNames = null;
    }
    public PStmtKeyCPDS ( final String sql, final int resultSetType, final int resultSetConcurrency ) {
        super ( sql, resultSetType, resultSetConcurrency );
        this._resultSetHoldability = null;
        this._columnIndexes = null;
        this._columnNames = null;
    }
    public PStmtKeyCPDS ( final String sql, final int resultSetType, final int resultSetConcurrency, final int resultSetHoldability ) {
        super ( sql, resultSetType, resultSetConcurrency );
        this._resultSetHoldability = resultSetHoldability;
        this._columnIndexes = null;
        this._columnNames = null;
    }
    public PStmtKeyCPDS ( final String sql, final int[] columnIndexes ) {
        super ( sql );
        this._columnIndexes = Arrays.copyOf ( columnIndexes, columnIndexes.length );
        this._resultSetHoldability = null;
        this._columnNames = null;
    }
    public PStmtKeyCPDS ( final String sql, final String[] columnNames ) {
        super ( sql );
        this._columnNames = Arrays.copyOf ( columnNames, columnNames.length );
        this._resultSetHoldability = null;
        this._columnIndexes = null;
    }
    @Override
    public boolean equals ( final Object obj ) {
        if ( this == obj ) {
            return true;
        }
        if ( !super.equals ( obj ) ) {
            return false;
        }
        if ( this.getClass() != obj.getClass() ) {
            return false;
        }
        final PStmtKeyCPDS other = ( PStmtKeyCPDS ) obj;
        if ( !Arrays.equals ( this._columnIndexes, other._columnIndexes ) ) {
            return false;
        }
        if ( !Arrays.equals ( this._columnNames, other._columnNames ) ) {
            return false;
        }
        if ( this._resultSetHoldability == null ) {
            if ( other._resultSetHoldability != null ) {
                return false;
            }
        } else if ( !this._resultSetHoldability.equals ( other._resultSetHoldability ) ) {
            return false;
        }
        return true;
    }
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = super.hashCode();
        result = 31 * result + Arrays.hashCode ( this._columnIndexes );
        result = 31 * result + Arrays.hashCode ( this._columnNames );
        result = 31 * result + ( ( this._resultSetHoldability == null ) ? 0 : this._resultSetHoldability.hashCode() );
        return result;
    }
    @Override
    public String toString() {
        final StringBuffer buf = new StringBuffer();
        buf.append ( "PStmtKey: sql=" );
        buf.append ( this.getSql() );
        buf.append ( ", catalog=" );
        buf.append ( this.getCatalog() );
        buf.append ( ", resultSetType=" );
        buf.append ( this.getResultSetType() );
        buf.append ( ", resultSetConcurrency=" );
        buf.append ( this.getResultSetConcurrency() );
        buf.append ( ", statmentType=" );
        buf.append ( this.getStmtType() );
        buf.append ( ", resultSetHoldability=" );
        buf.append ( this._resultSetHoldability );
        buf.append ( ", columnIndexes=" );
        buf.append ( Arrays.toString ( this._columnIndexes ) );
        buf.append ( ", columnNames=" );
        buf.append ( Arrays.toString ( this._columnNames ) );
        return buf.toString();
    }
}
