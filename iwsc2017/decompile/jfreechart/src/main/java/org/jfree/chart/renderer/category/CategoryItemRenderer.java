package org.jfree.chart.renderer.category;
import org.jfree.ui.RectangleEdge;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.LegendItem;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.labels.ItemLabelPosition;
import java.awt.Font;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.Paint;
import org.jfree.chart.plot.PlotRenderingInfo;
import java.awt.geom.Rectangle2D;
import java.awt.Graphics2D;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.chart.event.RendererChangeListener;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.LegendItemSource;
public interface CategoryItemRenderer extends LegendItemSource {
    int getPassCount();
    CategoryPlot getPlot();
    void setPlot ( CategoryPlot p0 );
    void addChangeListener ( RendererChangeListener p0 );
    void removeChangeListener ( RendererChangeListener p0 );
    Range findRangeBounds ( CategoryDataset p0 );
    CategoryItemRendererState initialise ( Graphics2D p0, Rectangle2D p1, CategoryPlot p2, int p3, PlotRenderingInfo p4 );
    boolean getItemVisible ( int p0, int p1 );
    boolean isSeriesVisible ( int p0 );
    Boolean getSeriesVisible();
    void setSeriesVisible ( Boolean p0 );
    void setSeriesVisible ( Boolean p0, boolean p1 );
    Boolean getSeriesVisible ( int p0 );
    void setSeriesVisible ( int p0, Boolean p1 );
    void setSeriesVisible ( int p0, Boolean p1, boolean p2 );
    boolean getBaseSeriesVisible();
    void setBaseSeriesVisible ( boolean p0 );
    void setBaseSeriesVisible ( boolean p0, boolean p1 );
    boolean isSeriesVisibleInLegend ( int p0 );
    Boolean getSeriesVisibleInLegend();
    void setSeriesVisibleInLegend ( Boolean p0 );
    void setSeriesVisibleInLegend ( Boolean p0, boolean p1 );
    Boolean getSeriesVisibleInLegend ( int p0 );
    void setSeriesVisibleInLegend ( int p0, Boolean p1 );
    void setSeriesVisibleInLegend ( int p0, Boolean p1, boolean p2 );
    boolean getBaseSeriesVisibleInLegend();
    void setBaseSeriesVisibleInLegend ( boolean p0 );
    void setBaseSeriesVisibleInLegend ( boolean p0, boolean p1 );
    Paint getItemPaint ( int p0, int p1 );
    void setPaint ( Paint p0 );
    Paint getSeriesPaint ( int p0 );
    void setSeriesPaint ( int p0, Paint p1 );
    Paint getBasePaint();
    void setBasePaint ( Paint p0 );
    Paint getItemOutlinePaint ( int p0, int p1 );
    void setOutlinePaint ( Paint p0 );
    Paint getSeriesOutlinePaint ( int p0 );
    void setSeriesOutlinePaint ( int p0, Paint p1 );
    Paint getBaseOutlinePaint();
    void setBaseOutlinePaint ( Paint p0 );
    Stroke getItemStroke ( int p0, int p1 );
    void setStroke ( Stroke p0 );
    Stroke getSeriesStroke ( int p0 );
    void setSeriesStroke ( int p0, Stroke p1 );
    Stroke getBaseStroke();
    void setBaseStroke ( Stroke p0 );
    Stroke getItemOutlineStroke ( int p0, int p1 );
    void setOutlineStroke ( Stroke p0 );
    Stroke getSeriesOutlineStroke ( int p0 );
    void setSeriesOutlineStroke ( int p0, Stroke p1 );
    Stroke getBaseOutlineStroke();
    void setBaseOutlineStroke ( Stroke p0 );
    Shape getItemShape ( int p0, int p1 );
    void setShape ( Shape p0 );
    Shape getSeriesShape ( int p0 );
    void setSeriesShape ( int p0, Shape p1 );
    Shape getBaseShape();
    void setBaseShape ( Shape p0 );
    boolean isItemLabelVisible ( int p0, int p1 );
    void setItemLabelsVisible ( boolean p0 );
    void setItemLabelsVisible ( Boolean p0 );
    void setItemLabelsVisible ( Boolean p0, boolean p1 );
    boolean isSeriesItemLabelsVisible ( int p0 );
    void setSeriesItemLabelsVisible ( int p0, boolean p1 );
    void setSeriesItemLabelsVisible ( int p0, Boolean p1 );
    void setSeriesItemLabelsVisible ( int p0, Boolean p1, boolean p2 );
    Boolean getBaseItemLabelsVisible();
    void setBaseItemLabelsVisible ( boolean p0 );
    void setBaseItemLabelsVisible ( Boolean p0 );
    void setBaseItemLabelsVisible ( Boolean p0, boolean p1 );
    CategoryItemLabelGenerator getItemLabelGenerator ( int p0, int p1 );
    void setItemLabelGenerator ( CategoryItemLabelGenerator p0 );
    CategoryItemLabelGenerator getSeriesItemLabelGenerator ( int p0 );
    void setSeriesItemLabelGenerator ( int p0, CategoryItemLabelGenerator p1 );
    CategoryItemLabelGenerator getBaseItemLabelGenerator();
    void setBaseItemLabelGenerator ( CategoryItemLabelGenerator p0 );
    CategoryToolTipGenerator getToolTipGenerator ( int p0, int p1 );
    CategoryToolTipGenerator getToolTipGenerator();
    void setToolTipGenerator ( CategoryToolTipGenerator p0 );
    CategoryToolTipGenerator getSeriesToolTipGenerator ( int p0 );
    void setSeriesToolTipGenerator ( int p0, CategoryToolTipGenerator p1 );
    CategoryToolTipGenerator getBaseToolTipGenerator();
    void setBaseToolTipGenerator ( CategoryToolTipGenerator p0 );
    Font getItemLabelFont ( int p0, int p1 );
    Font getItemLabelFont();
    void setItemLabelFont ( Font p0 );
    Font getSeriesItemLabelFont ( int p0 );
    void setSeriesItemLabelFont ( int p0, Font p1 );
    Font getBaseItemLabelFont();
    void setBaseItemLabelFont ( Font p0 );
    Paint getItemLabelPaint ( int p0, int p1 );
    Paint getItemLabelPaint();
    void setItemLabelPaint ( Paint p0 );
    Paint getSeriesItemLabelPaint ( int p0 );
    void setSeriesItemLabelPaint ( int p0, Paint p1 );
    Paint getBaseItemLabelPaint();
    void setBaseItemLabelPaint ( Paint p0 );
    ItemLabelPosition getPositiveItemLabelPosition ( int p0, int p1 );
    ItemLabelPosition getPositiveItemLabelPosition();
    void setPositiveItemLabelPosition ( ItemLabelPosition p0 );
    void setPositiveItemLabelPosition ( ItemLabelPosition p0, boolean p1 );
    ItemLabelPosition getSeriesPositiveItemLabelPosition ( int p0 );
    void setSeriesPositiveItemLabelPosition ( int p0, ItemLabelPosition p1 );
    void setSeriesPositiveItemLabelPosition ( int p0, ItemLabelPosition p1, boolean p2 );
    ItemLabelPosition getBasePositiveItemLabelPosition();
    void setBasePositiveItemLabelPosition ( ItemLabelPosition p0 );
    void setBasePositiveItemLabelPosition ( ItemLabelPosition p0, boolean p1 );
    ItemLabelPosition getNegativeItemLabelPosition ( int p0, int p1 );
    ItemLabelPosition getNegativeItemLabelPosition();
    void setNegativeItemLabelPosition ( ItemLabelPosition p0 );
    void setNegativeItemLabelPosition ( ItemLabelPosition p0, boolean p1 );
    ItemLabelPosition getSeriesNegativeItemLabelPosition ( int p0 );
    void setSeriesNegativeItemLabelPosition ( int p0, ItemLabelPosition p1 );
    void setSeriesNegativeItemLabelPosition ( int p0, ItemLabelPosition p1, boolean p2 );
    ItemLabelPosition getBaseNegativeItemLabelPosition();
    void setBaseNegativeItemLabelPosition ( ItemLabelPosition p0 );
    void setBaseNegativeItemLabelPosition ( ItemLabelPosition p0, boolean p1 );
    CategoryURLGenerator getItemURLGenerator ( int p0, int p1 );
    void setItemURLGenerator ( CategoryURLGenerator p0 );
    CategoryURLGenerator getSeriesItemURLGenerator ( int p0 );
    void setSeriesItemURLGenerator ( int p0, CategoryURLGenerator p1 );
    CategoryURLGenerator getBaseItemURLGenerator();
    void setBaseItemURLGenerator ( CategoryURLGenerator p0 );
    LegendItem getLegendItem ( int p0, int p1 );
    void drawBackground ( Graphics2D p0, CategoryPlot p1, Rectangle2D p2 );
    void drawOutline ( Graphics2D p0, CategoryPlot p1, Rectangle2D p2 );
    void drawItem ( Graphics2D p0, CategoryItemRendererState p1, Rectangle2D p2, CategoryPlot p3, CategoryAxis p4, ValueAxis p5, CategoryDataset p6, int p7, int p8, int p9 );
    void drawDomainGridline ( Graphics2D p0, CategoryPlot p1, Rectangle2D p2, double p3 );
    void drawRangeGridline ( Graphics2D p0, CategoryPlot p1, ValueAxis p2, Rectangle2D p3, double p4 );
    void drawDomainMarker ( Graphics2D p0, CategoryPlot p1, CategoryAxis p2, CategoryMarker p3, Rectangle2D p4 );
    void drawRangeMarker ( Graphics2D p0, CategoryPlot p1, ValueAxis p2, Marker p3, Rectangle2D p4 );
    double getItemMiddle ( Comparable p0, Comparable p1, CategoryDataset p2, CategoryAxis p3, Rectangle2D p4, RectangleEdge p5 );
}
