package org.apache.tomcat.jni;
public final class SSL {
    public static final int UNSET            = -1;
    public static final int SSL_ALGO_UNKNOWN = 0;
    public static final int SSL_ALGO_RSA     = ( 1 << 0 );
    public static final int SSL_ALGO_DSA     = ( 1 << 1 );
    public static final int SSL_ALGO_ALL     = ( SSL_ALGO_RSA | SSL_ALGO_DSA );
    public static final int SSL_AIDX_RSA     = 0;
    public static final int SSL_AIDX_DSA     = 1;
    public static final int SSL_AIDX_ECC     = 3;
    public static final int SSL_AIDX_MAX     = 4;
    public static final int SSL_TMP_KEY_RSA_512  = 0;
    public static final int SSL_TMP_KEY_RSA_1024 = 1;
    public static final int SSL_TMP_KEY_RSA_2048 = 2;
    public static final int SSL_TMP_KEY_RSA_4096 = 3;
    public static final int SSL_TMP_KEY_DH_512   = 4;
    public static final int SSL_TMP_KEY_DH_1024  = 5;
    public static final int SSL_TMP_KEY_DH_2048  = 6;
    public static final int SSL_TMP_KEY_DH_4096  = 7;
    public static final int SSL_TMP_KEY_MAX      = 8;
    public static final int SSL_OPT_NONE           = 0;
    public static final int SSL_OPT_RELSET         = ( 1 << 0 );
    public static final int SSL_OPT_STDENVVARS     = ( 1 << 1 );
    public static final int SSL_OPT_EXPORTCERTDATA = ( 1 << 3 );
    public static final int SSL_OPT_FAKEBASICAUTH  = ( 1 << 4 );
    public static final int SSL_OPT_STRICTREQUIRE  = ( 1 << 5 );
    public static final int SSL_OPT_OPTRENEGOTIATE = ( 1 << 6 );
    public static final int SSL_OPT_ALL            = ( SSL_OPT_STDENVVARS | SSL_OPT_EXPORTCERTDATA | SSL_OPT_FAKEBASICAUTH | SSL_OPT_STRICTREQUIRE | SSL_OPT_OPTRENEGOTIATE );
    public static final int SSL_PROTOCOL_NONE  = 0;
    public static final int SSL_PROTOCOL_SSLV2 = ( 1 << 0 );
    public static final int SSL_PROTOCOL_SSLV3 = ( 1 << 1 );
    public static final int SSL_PROTOCOL_TLSV1 = ( 1 << 2 );
    public static final int SSL_PROTOCOL_TLSV1_1 = ( 1 << 3 );
    public static final int SSL_PROTOCOL_TLSV1_2 = ( 1 << 4 );
    public static final int SSL_PROTOCOL_ALL   = ( SSL_PROTOCOL_TLSV1 | SSL_PROTOCOL_TLSV1_1 | SSL_PROTOCOL_TLSV1_2 );
    public static final int SSL_CVERIFY_UNSET          = UNSET;
    public static final int SSL_CVERIFY_NONE           = 0;
    public static final int SSL_CVERIFY_OPTIONAL       = 1;
    public static final int SSL_CVERIFY_REQUIRE        = 2;
    public static final int SSL_CVERIFY_OPTIONAL_NO_CA = 3;
    public static final int SSL_VERIFY_NONE                 = 0;
    public static final int SSL_VERIFY_PEER                 = 1;
    public static final int SSL_VERIFY_FAIL_IF_NO_PEER_CERT = 2;
    public static final int SSL_VERIFY_CLIENT_ONCE          = 4;
    public static final int SSL_VERIFY_PEER_STRICT          = ( SSL_VERIFY_PEER | SSL_VERIFY_FAIL_IF_NO_PEER_CERT );
    public static final int SSL_OP_MICROSOFT_SESS_ID_BUG            = 0x00000001;
    public static final int SSL_OP_NETSCAPE_CHALLENGE_BUG           = 0x00000002;
    public static final int SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG = 0x00000008;
    public static final int SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG      = 0x00000010;
    public static final int SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER       = 0x00000020;
    public static final int SSL_OP_MSIE_SSLV2_RSA_PADDING           = 0x00000040;
    public static final int SSL_OP_SSLEAY_080_CLIENT_DH_BUG         = 0x00000080;
    public static final int SSL_OP_TLS_D5_BUG                       = 0x00000100;
    public static final int SSL_OP_TLS_BLOCK_PADDING_BUG            = 0x00000200;
    public static final int SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS      = 0x00000800;
    public static final int SSL_OP_ALL                              = 0x00000FFF;
    public static final int SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION = 0x00010000;
    public static final int SSL_OP_NO_COMPRESSION                         = 0x00020000;
    public static final int SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION      = 0x00040000;
    public static final int SSL_OP_SINGLE_ECDH_USE                  = 0x00080000;
    public static final int SSL_OP_SINGLE_DH_USE                    = 0x00100000;
    public static final int SSL_OP_EPHEMERAL_RSA                    = 0x00200000;
    public static final int SSL_OP_CIPHER_SERVER_PREFERENCE         = 0x00400000;
    public static final int SSL_OP_TLS_ROLLBACK_BUG                 = 0x00800000;
    public static final int SSL_OP_NO_SSLv2                         = 0x01000000;
    public static final int SSL_OP_NO_SSLv3                         = 0x02000000;
    public static final int SSL_OP_NO_TLSv1                         = 0x04000000;
    public static final int SSL_OP_NO_TLSv1_2                       = 0x08000000;
    public static final int SSL_OP_NO_TLSv1_1                       = 0x10000000;
    public static final int SSL_OP_NO_TICKET                        = 0x00004000;
    @Deprecated
    public static final int SSL_OP_PKCS1_CHECK_1                    = 0x08000000;
    @Deprecated
    public static final int SSL_OP_PKCS1_CHECK_2                    = 0x10000000;
    public static final int SSL_OP_NETSCAPE_CA_DN_BUG               = 0x20000000;
    public static final int SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG  = 0x40000000;
    public static final int SSL_CRT_FORMAT_UNDEF    = 0;
    public static final int SSL_CRT_FORMAT_ASN1     = 1;
    public static final int SSL_CRT_FORMAT_TEXT     = 2;
    public static final int SSL_CRT_FORMAT_PEM      = 3;
    public static final int SSL_CRT_FORMAT_NETSCAPE = 4;
    public static final int SSL_CRT_FORMAT_PKCS12   = 5;
    public static final int SSL_CRT_FORMAT_SMIME    = 6;
    public static final int SSL_CRT_FORMAT_ENGINE   = 7;
    public static final int SSL_MODE_CLIENT         = 0;
    public static final int SSL_MODE_SERVER         = 1;
    public static final int SSL_MODE_COMBINED       = 2;
    public static final int SSL_SHUTDOWN_TYPE_UNSET    = 0;
    public static final int SSL_SHUTDOWN_TYPE_STANDARD = 1;
    public static final int SSL_SHUTDOWN_TYPE_UNCLEAN  = 2;
    public static final int SSL_SHUTDOWN_TYPE_ACCURATE = 3;
    public static final int SSL_INFO_SESSION_ID                = 0x0001;
    public static final int SSL_INFO_CIPHER                    = 0x0002;
    public static final int SSL_INFO_CIPHER_USEKEYSIZE         = 0x0003;
    public static final int SSL_INFO_CIPHER_ALGKEYSIZE         = 0x0004;
    public static final int SSL_INFO_CIPHER_VERSION            = 0x0005;
    public static final int SSL_INFO_CIPHER_DESCRIPTION        = 0x0006;
    public static final int SSL_INFO_PROTOCOL                  = 0x0007;
    public static final int SSL_INFO_CLIENT_S_DN               = 0x0010;
    public static final int SSL_INFO_CLIENT_I_DN               = 0x0020;
    public static final int SSL_INFO_SERVER_S_DN               = 0x0040;
    public static final int SSL_INFO_SERVER_I_DN               = 0x0080;
    public static final int SSL_INFO_DN_COUNTRYNAME            = 0x0001;
    public static final int SSL_INFO_DN_STATEORPROVINCENAME    = 0x0002;
    public static final int SSL_INFO_DN_LOCALITYNAME           = 0x0003;
    public static final int SSL_INFO_DN_ORGANIZATIONNAME       = 0x0004;
    public static final int SSL_INFO_DN_ORGANIZATIONALUNITNAME = 0x0005;
    public static final int SSL_INFO_DN_COMMONNAME             = 0x0006;
    public static final int SSL_INFO_DN_TITLE                  = 0x0007;
    public static final int SSL_INFO_DN_INITIALS               = 0x0008;
    public static final int SSL_INFO_DN_GIVENNAME              = 0x0009;
    public static final int SSL_INFO_DN_SURNAME                = 0x000A;
    public static final int SSL_INFO_DN_DESCRIPTION            = 0x000B;
    public static final int SSL_INFO_DN_UNIQUEIDENTIFIER       = 0x000C;
    public static final int SSL_INFO_DN_EMAILADDRESS           = 0x000D;
    public static final int SSL_INFO_CLIENT_M_VERSION          = 0x0101;
    public static final int SSL_INFO_CLIENT_M_SERIAL           = 0x0102;
    public static final int SSL_INFO_CLIENT_V_START            = 0x0103;
    public static final int SSL_INFO_CLIENT_V_END              = 0x0104;
    public static final int SSL_INFO_CLIENT_A_SIG              = 0x0105;
    public static final int SSL_INFO_CLIENT_A_KEY              = 0x0106;
    public static final int SSL_INFO_CLIENT_CERT               = 0x0107;
    public static final int SSL_INFO_CLIENT_V_REMAIN           = 0x0108;
    public static final int SSL_INFO_SERVER_M_VERSION          = 0x0201;
    public static final int SSL_INFO_SERVER_M_SERIAL           = 0x0202;
    public static final int SSL_INFO_SERVER_V_START            = 0x0203;
    public static final int SSL_INFO_SERVER_V_END              = 0x0204;
    public static final int SSL_INFO_SERVER_A_SIG              = 0x0205;
    public static final int SSL_INFO_SERVER_A_KEY              = 0x0206;
    public static final int SSL_INFO_SERVER_CERT               = 0x0207;
    public static final int SSL_INFO_CLIENT_CERT_CHAIN         = 0x0400;
    public static final long SSL_SESS_CACHE_OFF = 0x0000;
    public static final long SSL_SESS_CACHE_SERVER = 0x0002;
    public static final int SSL_SELECTOR_FAILURE_NO_ADVERTISE = 0;
    public static final int SSL_SELECTOR_FAILURE_CHOOSE_MY_LAST_PROTOCOL = 1;
    public static native int version();
    public static native String versionString();
    public static native int initialize ( String engine );
    public static native int fipsModeGet() throws Exception;
    public static native int fipsModeSet ( int mode ) throws Exception;
    public static native boolean randLoad ( String filename );
    public static native boolean randSave ( String filename );
    public static native boolean randMake ( String filename, int len,
                                            boolean base64 );
    public static native void randSet ( String filename );
    public static native long newBIO ( long pool, BIOCallback callback )
    throws Exception;
    public static native int closeBIO ( long bio );
    public static native void setPasswordCallback ( PasswordCallback callback );
    public static native void setPassword ( String password );
    public static native String getLastError();
    public static native boolean hasOp ( int op );
    public static native int getHandshakeCount ( long ssl );
    public static final int SSL_SENT_SHUTDOWN = 1;
    public static final int SSL_RECEIVED_SHUTDOWN = 2;
    public static final int SSL_ERROR_NONE             = 0;
    public static final int SSL_ERROR_SSL              = 1;
    public static final int SSL_ERROR_WANT_READ        = 2;
    public static final int SSL_ERROR_WANT_WRITE       = 3;
    public static final int SSL_ERROR_WANT_X509_LOOKUP = 4;
    public static final int SSL_ERROR_SYSCALL          = 5;
    public static final int SSL_ERROR_ZERO_RETURN      = 6;
    public static final int SSL_ERROR_WANT_CONNECT     = 7;
    public static final int SSL_ERROR_WANT_ACCEPT      = 8;
    public static native long newSSL ( long ctx, boolean server );
    public static native void setBIO ( long ssl, long rbio, long wbio );
    public static native int getError ( long ssl, int ret );
    public static native int pendingWrittenBytesInBIO ( long bio );
    public static native int pendingReadableBytesInSSL ( long ssl );
    public static native int writeToBIO ( long bio, long wbuf, int wlen );
    public static native int readFromBIO ( long bio, long rbuf, int rlen );
    public static native int writeToSSL ( long ssl, long wbuf, int wlen );
    public static native int readFromSSL ( long ssl, long rbuf, int rlen );
    public static native int getShutdown ( long ssl );
    public static native void setShutdown ( long ssl, int mode );
    public static native void freeSSL ( long ssl );
    public static native long makeNetworkBIO ( long ssl );
    public static native void freeBIO ( long bio );
    public static native int shutdownSSL ( long ssl );
    public static native int getLastErrorNumber();
    public static native String getCipherForSSL ( long ssl );
    public static native String getVersion ( long ssl );
    public static native int doHandshake ( long ssl );
    public static native int renegotiate ( long ssl );
    public static native int isInInit ( long ssl );
    public static native String getNextProtoNegotiated ( long ssl );
    public static native String getAlpnSelected ( long ssl );
    public static native byte[][] getPeerCertChain ( long ssl );
    public static native byte[] getPeerCertificate ( long ssl );
    public static native String getErrorString ( long errorNumber );
    public static native long getTime ( long ssl );
    public static native void setVerify ( long ssl, int level, int depth );
    public static native void setOptions ( long ssl, int options );
    public static native int getOptions ( long ssl );
    public static native String[] getCiphers ( long ssl );
    public static native boolean setCipherSuites ( long ssl, String ciphers )
    throws Exception;
    public static native byte[] getSessionId ( long ssl );
}
