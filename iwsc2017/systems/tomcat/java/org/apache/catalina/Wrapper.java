package org.apache.catalina;
import javax.servlet.MultipartConfigElement;
import javax.servlet.Servlet;
import javax.servlet.ServletException;
import javax.servlet.UnavailableException;
public interface Wrapper extends Container {
    public static final String ADD_MAPPING_EVENT = "addMapping";
    public static final String REMOVE_MAPPING_EVENT = "removeMapping";
    public long getAvailable();
    public void setAvailable ( long available );
    public int getLoadOnStartup();
    public void setLoadOnStartup ( int value );
    public String getRunAs();
    public void setRunAs ( String runAs );
    public String getServletClass();
    public void setServletClass ( String servletClass );
    public String[] getServletMethods() throws ServletException;
    public boolean isUnavailable();
    public Servlet getServlet();
    public void setServlet ( Servlet servlet );
    public void addInitParameter ( String name, String value );
    public void addMapping ( String mapping );
    public void addSecurityReference ( String name, String link );
    public Servlet allocate() throws ServletException;
    public void deallocate ( Servlet servlet ) throws ServletException;
    public String findInitParameter ( String name );
    public String[] findInitParameters();
    public String[] findMappings();
    public String findSecurityReference ( String name );
    public String[] findSecurityReferences();
    public void incrementErrorCount();
    public void load() throws ServletException;
    public void removeInitParameter ( String name );
    public void removeMapping ( String mapping );
    public void removeSecurityReference ( String name );
    public void unavailable ( UnavailableException unavailable );
    public void unload() throws ServletException;
    public MultipartConfigElement getMultipartConfigElement();
    public void setMultipartConfigElement (
        MultipartConfigElement multipartConfig );
    public boolean isAsyncSupported();
    public void setAsyncSupported ( boolean asyncSupport );
    public boolean isEnabled();
    public void setEnabled ( boolean enabled );
    public void setServletSecurityAnnotationScanRequired ( boolean b );
    public void servletSecurityAnnotationScan() throws ServletException;
    public boolean isOverridable();
    public void setOverridable ( boolean overridable );
}
